name: CI/CD Pipeline for Registration App

on:
  push:
    branches:
      - main # Exécute le workflow quand il y a un push sur la branche main

jobs:
  build_and_push:
    runs-on: ubuntu-latest # Environnement d'exécution

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3 # Récupère le code du dépôt

      - name: Build Backend Docker Image
        run: docker build -t delph152/registration-backend:latest ./backend
        # Remplace 'delph152' par ton nom d'utilisateur Docker Hub ou le nom de ton registre

      - name: Build Frontend Docker Image
        run: docker build -t delph152/registration-frontend:latest ./frontend
        # Remplace 'delph152' par ton nom d'utilisateur Docker Hub ou le nom de ton registre

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        # Tu devras configurer ces secrets dans les paramètres de ton dépôt GitHub

      - name: Push Backend Docker Image
        run: docker push delph152/registration-backend:latest

      - name: Push Frontend Docker Image
        run: docker push delph152/registration-frontend:latest

  # Cette étape est très simplifiée pour un déploiement, en réalité, ce serait plus complexe
  # et utiliserait des outils comme Kubernetes ou Terraform pour un déploiement réel sur un cloud.
  # Ici, on simule un déploiement basique, par exemple en se connectant à un serveur distant.
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push # Dépend de la réussite de l'étape de build
    environment: production # Définit l'environnement de déploiement
    if: success() # Ne s'exécute que si l'étape précédente a réussi

    steps:
      - name: Deploy to Server (Placeholder)
        run: |
          echo "Simulating deployment to a production server..."
          echo "In a real scenario, this would involve SSHing into your server,"
          echo "pulling the new Docker images, and restarting your containers."
          echo "Example (simplifié):"
          echo "  ssh -i ~/.ssh/your_key user@your_server_ip 'docker pull delph152/registration-backend:latest && docker pull delph152/registration-frontend:latest && docker compose -f /path/to/remote/docker-compose.yml up -d --force-recreate'"
          echo "Deployment completed for delph152/registration-backend:latest and delph152/registration-frontend:latest"